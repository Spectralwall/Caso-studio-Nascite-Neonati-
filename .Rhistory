campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
plot(density(reddito))
abline(v=mu_vero,col=2)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
campione <- sample(reddito,30)
mean(campione)
abline(v=mean(campione),col=4)
set.seed(2)
for (i in 1:numerositaCampionaria) {
campione = sample(reddito,n)
medie[i]=mean(campione)
dst[i]=sdv(campione)
}
numerositaCampionaria = 5
#e faccimao con un cilo diverse estrazioni calcolando la media e la deviazione standard
n = 5 #numero campioni da estrare
set.seed(2)
for (i in 1:numerositaCampionaria) {
campione = sample(reddito,n)
medie[i]=mean(campione)
dst[i]=sdv(campione)
}
#verifichiamo le propieta degli stimatori
medie <- c(NA)
dst <- c(NA)
set.seed(2)
for (i in 1:numerositaCampionaria) {
campione = sample(reddito,n)
medie[i]=mean(campione)
dst[i]=sdv(campione)
}
set.seed(2)
for (i in 1:numerositaCampionaria) {
campione = sample(reddito,n)
medie[i]=mean(campione)
dst[i]=sd(campione)
}
medie
dst
plot(density(medie))
#possiamo confronrare la medie delle medine con la vera media della distrizione
#per verificare che sia corretta
mu_vero
mean(medie)
medie
#possiamo confronrare la medie delle medine con la vera media della distrizione
#per verificare che sia corretta
mu_vero; mean(medie)
#lo stesso vale per le deviazioni standard
sigma_vero; mean(dst)
#possiamo vedre anche l'errore standard
std.err <- sd(medie)/n
std.err
#IMPORT
library(moments)
library(ggplot2)
library(gridExtra)
library(grid)
library(ggthemes)
install.packages("ggthemes")
#ANALISI NASCITE NEONATI
#IMPORT
library(moments)
library(ggplot2)
library(gridExtra)
library(grid)
library(ggthemes)
library(PerformanceAnalytics)
#FUNZIONI
#Funzione che calcola la moda/classe modale
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#COEFFIECENTE DI VARIAZIONE
CV <- function(x){
return((sd(x)/mean(x))*100)
}
#INDICE DI ETEROGENEITA DI GINI Normalizzato
G <- function(x){
ni=table(x) #frequenze assolute
fi=ni/length(x)#frequenze relative
fi2 = fi^2 #frequenze relative al quadrato
J = length(table(x)) #tipi di classi che abbiamo
gini = 1-sum(fi2) #G=1-sommatoria di frequenze relative al quadrato
gini_norm = gini/((J-1)/J)
return(gini_norm)
}
#funzione che genera una tabella contenente tutti gli indici di una variabile
#indici di posizione, variabilità e forma
analisi.quantitative <- function(x,y){
df=as.data.frame(cbind(summary(x)))
colnames(df)<-c(y)
df2=data.frame(summary=c(max(x)-min(x),IQR(x),Mode(x),var(x),
sd(x),CV(x),skewness(x),kurtosis(x)-3))
rownames(df2) <- c("Range","IQR","Mode","Var","SD","CV","Asymmetry","Curtosi")
colnames(df2)<-c(y)
df_all = rbind(df,df2)
png("report.png", height = 30*nrow(df_all), width = 200*ncol(df_all))
grid.table(df_all)
dev.off()
ggplot()+
geom_density(aes(x=x),col="darkblue",fill="lightblue")+
geom_vline(aes(xintercept=mean(x)),
color="red", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=quantile(x,seq(0,1,0.25))),
color="green3", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=median(x)),
color="orange", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=Mode(x)),
color="yellow", linetype="dashed", linewidth=1)+
xlab("Sales")+
ylab("Density")+
labs(title = "Distribuzione Sales")+
theme_fivethirtyeight()
print("Summary, Range, Range Interquantile, Moda, Variaza, Devizione standard, Coefficente di variazione, Assiemtria, Curtosi")
return(
list(
summary(x),
max(x)-min(x),
IQR(x),
Mode(x),
var(x),
sd(x),
CV(x),
skewness(x),
kurtosis(x)-3
)
)
}
#funzione che fa un analisi compleata delle variabili quantitative
#esegue tabelle di frequenza assoluta, relativa, cumulata e indice di gini
analisi.qualitative <- function(x){
n=length(x)
ni=table(x)
fi=table(x)/n
Ni=cumsum(table(x))
Fi=cumsum(table(x))/n
df=as.data.frame(cbind(ni,fi,Ni,Fi))
png("Frequenze.png", height = 50*nrow(df), width = 100*ncol(df))
grid.table(df)
dev.off()
png("Gini.png", height = 50*nrow(df), width = 100*ncol(df))
grid.table(data.frame(Gini=c(G(x))))
dev.off()
}
#import dataset
#ANALISI NASCITE NEONATI
#IMPORT
library(moments)
library(ggplot2)
library(gridExtra)
library(grid)
library(ggthemes)
library(PerformanceAnalytics)
#FUNZIONI
#Funzione che calcola la moda/classe modale
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#COEFFIECENTE DI VARIAZIONE
CV <- function(x){
return((sd(x)/mean(x))*100)
}
#INDICE DI ETEROGENEITA DI GINI Normalizzato
G <- function(x){
ni=table(x) #frequenze assolute
fi=ni/length(x)#frequenze relative
fi2 = fi^2 #frequenze relative al quadrato
J = length(table(x)) #tipi di classi che abbiamo
gini = 1-sum(fi2) #G=1-sommatoria di frequenze relative al quadrato
gini_norm = gini/((J-1)/J)
return(gini_norm)
}
#funzione che genera una tabella contenente tutti gli indici di una variabile
#indici di posizione, variabilità e forma
analisi.quantitative <- function(x,y){
df=as.data.frame(cbind(summary(x)))
colnames(df)<-c(y)
df2=data.frame(summary=c(max(x)-min(x),IQR(x),Mode(x),var(x),
sd(x),CV(x),skewness(x),kurtosis(x)-3))
rownames(df2) <- c("Range","IQR","Mode","Var","SD","CV","Asymmetry","Curtosi")
colnames(df2)<-c(y)
df_all = rbind(df,df2)
png("report.png", height = 30*nrow(df_all), width = 200*ncol(df_all))
grid.table(df_all)
dev.off()
ggplot()+
geom_density(aes(x=x),col="darkblue",fill="lightblue")+
geom_vline(aes(xintercept=mean(x)),
color="red", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=quantile(x,seq(0,1,0.25))),
color="green3", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=median(x)),
color="orange", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=Mode(x)),
color="yellow", linetype="dashed", linewidth=1)+
xlab("Sales")+
ylab("Density")+
labs(title = "Distribuzione Sales")+
theme_fivethirtyeight()
print("Summary, Range, Range Interquantile, Moda, Variaza, Devizione standard, Coefficente di variazione, Assiemtria, Curtosi")
return(
list(
summary(x),
max(x)-min(x),
IQR(x),
Mode(x),
var(x),
sd(x),
CV(x),
skewness(x),
kurtosis(x)-3
)
)
}
#funzione che fa un analisi compleata delle variabili quantitative
#esegue tabelle di frequenza assoluta, relativa, cumulata e indice di gini
analisi.qualitative <- function(x){
n=length(x)
ni=table(x)
fi=table(x)/n
Ni=cumsum(table(x))
Fi=cumsum(table(x))/n
df=as.data.frame(cbind(ni,fi,Ni,Fi))
png("Frequenze.png", height = 50*nrow(df), width = 100*ncol(df))
grid.table(df)
dev.off()
png("Gini.png", height = 50*nrow(df), width = 100*ncol(df))
grid.table(data.frame(Gini=c(G(x))))
dev.off()
}
#import dataset
#se computer fisso
setwd("C:\\Users\\gabri\\Desktop\\Private Project\\Caso-studio-Nascite-Neonati-")
neonati <- read.csv("neonati.csv",stringsAsFactors = T)
attach(neonati)
head(neonati)
summary(neonati)
detach(neonati)
neonati.filtrato <- subset(neonati,Anni.madre>=12)
attach(neonati.filtrato)
table(neonati.filtrato$Anni.madre)
summary(neonati.filtrato)
data.frame(Anni.madre)
head(data.frame(Anni.madre))
head(data.frame(table(Anni.madre)))
data.frame(table(Anni.madre))
head(data.frame(table(Anni.madre)))
#funzione che fa un analisi compleata delle variabili quantitative
#esegue tabelle di frequenza assoluta, relativa, cumulata e indice di gini
analisi.qualitative <- function(x){
n=length(x)
ni=table(x)
fi=table(x)/n
Ni=cumsum(table(x))
Fi=cumsum(table(x))/n
df=as.data.frame(cbind(ni,fi,Ni,Fi))
png("Frequenze.png", height = 50*nrow(df), width = 100*ncol(df))
grid.table(df)
grid.draw(df)
dev.off()
png("Gini.png", height = 50*nrow(df), width = 100*ncol(df))
grid.table(data.frame(Gini=c(G(x))))
dev.off()
}
analisi.qualitative(Sesso)
#funzione che fa un analisi compleata delle variabili quantitative
#esegue tabelle di frequenza assoluta, relativa, cumulata e indice di gini
analisi.qualitative <- function(x){
n=length(x)
ni=table(x)
fi=table(x)/n
Ni=cumsum(table(x))
Fi=cumsum(table(x))/n
df=as.data.frame(cbind(ni,fi,Ni,Fi))
png("Frequenze.png", height = 50*nrow(df), width = 100*ncol(df))
grid.table(df)
dev.off()
png("Gini.png", height = 50*nrow(df), width = 100*ncol(df))
grid.table(data.frame(Gini=c(G(x))))
grid.draw(data.frame(Gini=c(G(x))))
dev.off()
}
analisi.qualitative(Sesso)
#funzione che fa un analisi compleata delle variabili quantitative
#esegue tabelle di frequenza assoluta, relativa, cumulata e indice di gini
analisi.qualitative <- function(x){
n=length(x)
ni=table(x)
fi=table(x)/n
Ni=cumsum(table(x))
Fi=cumsum(table(x))/n
df=as.data.frame(cbind(ni,fi,Ni,Fi))
png("Frequenze.png", height = 50*nrow(df), width = 100*ncol(df))
g=grid.table(df)
grid.draw(g)
dev.off()
png("Gini.png", height = 50*nrow(df), width = 100*ncol(df))
grid.table(data.frame(Gini=c(G(x))))
dev.off()
}
analisi.qualitative(Sesso)
#funzione che fa un analisi compleata delle variabili quantitative
#esegue tabelle di frequenza assoluta, relativa, cumulata e indice di gini
analisi.qualitative <- function(x){
n=length(x)
ni=table(x)
fi=table(x)/n
Ni=cumsum(table(x))
Fi=cumsum(table(x))/n
df=as.data.frame(cbind(ni,fi,Ni,Fi))
png("Frequenze.png", height = 50*nrow(df), width = 100*ncol(df))
grid.table(df)
dev.off()
png("Gini.png", height = 50*nrow(df), width = 50*ncol(df))
grid.table(data.frame(Gini=c(G(x))))
dev.off()
}
analisi.qualitative(Sesso)
#Anni madre---------------------------------------------------------------------
table(neonati$Anni.madre)
#Anni madre---------------------------------------------------------------------
summary(neonati$Anni.madre)
table(neonati$Anni.madre)
detach(neonati)
table(neonati.filtrato$Anni.madre)
analisi.quantitative(Anni.madre)
analisi.quantitative(Anni.madre,"Anni Madre")
analisi.quantitative(Anni.madre,"Anni Madre")
analisi.quantitative(Anni.madre,"Anni Madre")
#funzione che genera una tabella contenente tutti gli indici di una variabile
#indici di posizione, variabilità e forma
analisi.quantitative <- function(x,y){
df=as.data.frame(cbind(summary(x)))
colnames(df)<-c(y)
df2=data.frame(summary=c(max(x)-min(x),IQR(x),Mode(x),var(x),
sd(x),CV(x),skewness(x),kurtosis(x)-3))
rownames(df2) <- c("Range","IQR","Mode","Var","SD","CV","Asymmetry","Curtosi")
colnames(df2)<-c(y)
df_all = rbind(df,df2)
png("report.png", height = 30*nrow(df_all), width = 200*ncol(df_all))
grid.table(df_all)
dev.off()
ggplot()+
geom_density(aes(x=x),col="darkblue",fill="lightblue")+
geom_vline(aes(xintercept=mean(x)),
color="red", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=quantile(x,seq(0,1,0.25))),
color="green3", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=median(x)),
color="orange", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=Mode(x)),
color="yellow", linetype="dashed", linewidth=1)+
xlab("Sales")+
ylab("Density")+
labs(title = "Distribuzione Sales")+
theme_fivethirtyeight()
return(
list(
summary(x),
max(x)-min(x),
IQR(x),
Mode(x),
var(x),
sd(x),
CV(x),
skewness(x),
kurtosis(x)-3
)
)
}
analisi.quantitative(Anni.madre,"Anni Madre")
#funzione che genera una tabella contenente tutti gli indici di una variabile
#indici di posizione, variabilità e forma
analisi.quantitative <- function(x,y){
df=as.data.frame(cbind(summary(x)))
colnames(df)<-c(y)
df2=data.frame(summary=c(max(x)-min(x),IQR(x),Mode(x),var(x),
sd(x),CV(x),skewness(x),kurtosis(x)-3))
rownames(df2) <- c("Range","IQR","Mode","Var","SD","CV","Asymmetry","Curtosi")
colnames(df2)<-c(y)
df_all = rbind(df,df2)
png("report.png", height = 30*nrow(df_all), width = 200*ncol(df_all))
grid.table(df_all)
dev.off()
plot=ggplot()+
geom_density(aes(x=x),col="darkblue",fill="lightblue")+
geom_vline(aes(xintercept=mean(x)),
color="red", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=quantile(x,seq(0,1,0.25))),
color="green3", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=median(x)),
color="orange", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=Mode(x)),
color="yellow", linetype="dashed", linewidth=1)+
xlab("Sales")+
ylab("Density")+
labs(title = "Distribuzione Sales")+
theme_fivethirtyeight()
print("Summary, Range, Range Interquantile, Moda, Variaza, Devizione standard, Coefficente di variazione, Assiemtria, Curtosi")
return(
list(
plot,
summary(x),
max(x)-min(x),
IQR(x),
Mode(x),
var(x),
sd(x),
CV(x),
skewness(x),
kurtosis(x)-3
)
)
}
analisi.quantitative(Anni.madre,"Anni Madre")
analisi.quantitative(Anni.madre,"Anni Madre")
anni.madre.summary=analisi.quantitative(Anni.madre,"Anni Madre")
anni.madre.summary[0]
anni.madre.summary
plot=ggplot()+
geom_density(aes(x=Anni.madre),col="darkblue",fill="lightblue")+
geom_vline(aes(xintercept=mean(Anni.madre)),
color="red", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=quantile(Anni.madre,seq(0,1,0.25))),
color="green3", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=median(Anni.madre)),
color="orange", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=Mode(Anni.madre)),
color="yellow", linetype="dashed", linewidth=1)+
xlab("Sales")+
ylab("Density")+
labs(title = "Distribuzione Sales")+
theme_fivethirtyeight()
plot
ggplot()+
geom_density(aes(x=Anni.madre),col="darkblue",fill="lightblue")+
geom_vline(aes(xintercept=mean(Anni.madre)),
color="red", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=quantile(Anni.madre,seq(0,1,0.25))),
color="green3", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=median(Anni.madre)),
color="orange", linetype="dashed", linewidth=1)+
geom_vline(aes(xintercept=Mode(Anni.madre)),
color="yellow", linetype="dashed", linewidth=1)+
xlab("Sales")+
ylab("Density")+
labs(title = "Distribuzione Sales")+
theme_fivethirtyeight()
